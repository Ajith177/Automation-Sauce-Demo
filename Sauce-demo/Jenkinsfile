pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = 'Mysonarqube' // Name defined in Jenkins > Manage Jenkins > Configure SonarQube
    }

    stages {
        stage('Clone') {
            steps {
                echo "Cloning the repo..."
                checkout scm
            }
        }

        stage('SonarQube Scan') {
            steps {
                echo "Running SonarQube analysis..."
                withSonarQubeEnv("${SONARQUBE_SERVER}") {
                    sh """
                        sonar-scanner \
                        -Dsonar.projectKey=my_python_automation \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://192.168.1.4:9000 \
                        -Dsonar.login=squ_d33310e2786c6e1eb13439d3121f50945aa90fba
                    """
                }
            }
        }

        stage('Build') {
            steps {
                echo "Running build step..."
                // e.g., pip install -r requirements.txt
            }
        }

        stage('Test') {
            steps {
                echo "Running tests..."
                // e.g., pytest tests/
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploy stage (placeholder)..."
                // FTP, SSH or Docker deployment steps
            }
        }
    }
}
