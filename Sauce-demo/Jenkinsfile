pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = 'Mysonarqube' // Must match name in Jenkins > Configure SonarQube
        SONAR_PROJECT_KEY = 'my_python_automation'
        SONAR_HOST_URL = 'http://192.168.1.4:9000'
    }

    stages {
        stage('Clone') {
            steps {
                echo "Cloning the repo..."
                checkout scm
            }
        }

        stage('SonarQube Scan') {
            steps {
                echo "Running SonarQube analysis..."
                withSonarQubeEnv("${SONARQUBE_SERVER}") {
                    sh """
                        sonar-scanner \
                        -Dsonar.projectKey=$SONAR_PROJECT_KEY \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=$SONAR_HOST_URL
                    """
                }
            }
        }

        stage('hello.py') {
            steps {
                echo 'jenkins started'
                sh 'python3 /home/ajith/python-sample/hello.py'
                echo 'hello.py'
                echo 'jenkins executed successfully.'
            }
        }

        stage('Build') {
            steps {
                echo "Build step (optional)..."
            }
        }

        stage('Test') {
            steps {
                echo "Run tests (optional)..."
            }
        }

        stage('Deploy') {
            steps {
                echo "Deploy step (optional)..."
            }
        }
    }
}
